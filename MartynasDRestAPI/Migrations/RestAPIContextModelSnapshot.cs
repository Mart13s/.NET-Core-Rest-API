// <auto-generated />
using System;
using MartynasDRestAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MartynasDRestAPI.Migrations
{
    [DbContext(typeof(RestAPIContext))]
    partial class RestAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.InventoryItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ownerID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ownerID");

                    b.ToTable("inventoryItems");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Purchase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("buyerID")
                        .HasColumnType("int");

                    b.Property<decimal>("totalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("totalItemCount")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("buyerID");

                    b.ToTable("purchases");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.PurchaseItem", b =>
                {
                    b.Property<int>("purchaseID")
                        .HasColumnType("int");

                    b.Property<int>("storeItemID")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.HasKey("purchaseID", "storeItemID");

                    b.HasIndex("storeItemID");

                    b.ToTable("purchaseItems");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Review", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("itemid")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<string>("reviewName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reviewText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("itemid");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.StoreItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("storeItems");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Trade", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("receiverID")
                        .HasColumnType("int");

                    b.Property<int>("senderID")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("trades");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.TradeItem", b =>
                {
                    b.Property<int>("tradeID")
                        .HasColumnType("int");

                    b.Property<int>("itemID")
                        .HasColumnType("int");

                    b.HasKey("tradeID", "itemID");

                    b.ToTable("tradeItems");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.InventoryItem", b =>
                {
                    b.HasOne("MartynasDRestAPI.Data.Entities.User", "owner")
                        .WithMany()
                        .HasForeignKey("ownerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("owner");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Purchase", b =>
                {
                    b.HasOne("MartynasDRestAPI.Data.Entities.User", "buyer")
                        .WithMany()
                        .HasForeignKey("buyerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("buyer");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.PurchaseItem", b =>
                {
                    b.HasOne("MartynasDRestAPI.Data.Entities.Purchase", "purchase")
                        .WithMany("items")
                        .HasForeignKey("purchaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartynasDRestAPI.Data.Entities.StoreItem", "storeItem")
                        .WithMany()
                        .HasForeignKey("storeItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("purchase");

                    b.Navigation("storeItem");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Review", b =>
                {
                    b.HasOne("MartynasDRestAPI.Data.Entities.StoreItem", "item")
                        .WithMany()
                        .HasForeignKey("itemid");

                    b.Navigation("item");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Purchase", b =>
                {
                    b.Navigation("items");
                });
#pragma warning restore 612, 618
        }
    }
}
