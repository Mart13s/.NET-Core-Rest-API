// <auto-generated />
using System;
using MartynasDRestAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MartynasDRestAPI.Migrations
{
    [DbContext(typeof(RestAPIContext))]
    partial class RestAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.InventoryItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Tradeid")
                        .HasColumnType("int");

                    b.Property<int?>("Tradeid1")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ownerid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Tradeid");

                    b.HasIndex("Tradeid1");

                    b.HasIndex("ownerid");

                    b.ToTable("inventoryItems");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Purchase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("buyerid")
                        .HasColumnType("int");

                    b.Property<decimal>("totalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("totalItemCount")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("buyerid");

                    b.ToTable("purchases");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Review", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("itemid")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<string>("reviewName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reviewText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("itemid");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.StoreItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Purchaseid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("qtyLeft")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Purchaseid");

                    b.ToTable("storeItems");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Trade", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("receiverUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("receiverid")
                        .HasColumnType("int");

                    b.Property<string>("senderUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("senderid")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("receiverid");

                    b.HasIndex("senderid");

                    b.ToTable("trades");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.InventoryItem", b =>
                {
                    b.HasOne("MartynasDRestAPI.Data.Entities.Trade", null)
                        .WithMany("receiverItems")
                        .HasForeignKey("Tradeid");

                    b.HasOne("MartynasDRestAPI.Data.Entities.Trade", null)
                        .WithMany("senderItems")
                        .HasForeignKey("Tradeid1");

                    b.HasOne("MartynasDRestAPI.Data.Entities.User", "owner")
                        .WithMany()
                        .HasForeignKey("ownerid");

                    b.Navigation("owner");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Purchase", b =>
                {
                    b.HasOne("MartynasDRestAPI.Data.Entities.User", "buyer")
                        .WithMany()
                        .HasForeignKey("buyerid");

                    b.Navigation("buyer");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Review", b =>
                {
                    b.HasOne("MartynasDRestAPI.Data.Entities.StoreItem", "item")
                        .WithMany()
                        .HasForeignKey("itemid");

                    b.Navigation("item");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.StoreItem", b =>
                {
                    b.HasOne("MartynasDRestAPI.Data.Entities.Purchase", null)
                        .WithMany("item")
                        .HasForeignKey("Purchaseid");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Trade", b =>
                {
                    b.HasOne("MartynasDRestAPI.Data.Entities.User", "receiver")
                        .WithMany()
                        .HasForeignKey("receiverid");

                    b.HasOne("MartynasDRestAPI.Data.Entities.User", "sender")
                        .WithMany()
                        .HasForeignKey("senderid");

                    b.Navigation("receiver");

                    b.Navigation("sender");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Purchase", b =>
                {
                    b.Navigation("item");
                });

            modelBuilder.Entity("MartynasDRestAPI.Data.Entities.Trade", b =>
                {
                    b.Navigation("receiverItems");

                    b.Navigation("senderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
